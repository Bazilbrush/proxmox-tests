name: test connecting to proxmox
run-name: ${{ github.actor }} is testing proxmox
on: 
  workflow_dispatch:
    # inputs:
      #     tfpath:
      #         description: 'TF File Path'     
      #         required: false
      #         default: 'infra'
    # secrets:
    #   ARM_CLIENT_ID:
    #       description: 'service principal id'
    #       required: false
            
permissions:
    id-token: write
    contents: read

jobs:
  register_to_tailscale:
    name: register tailscale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.5.0

      - name: encrypt TF dir
        run: |
            curl 'https://api.tailscale.com/api/v2/tailnet/${{ secrets.TAILNET }}/devices' \
            --header 'Authorization: Bearer ${{ secrets.TS_TOKEN }}'

      - name: Get ephemeral Tailscale auth key
        id: get-key
        run: |
          AUTH_KEY_JSON=$(curl -s -X POST "https://api.tailscale.com/api/v2/tailnet/${{ secrets.TAILNET }}/keys" \
            -u "${{ secrets.TS_TOKEN }}:" \
            -H "Content-Type: application/json" \
            -d '{
              "capabilities": {
                "devices": {
                  "create": {
                    "reusable": false,
                    "ephemeral": true,
                    "preauthorized": true
                  }
                }
              },
              "expirySeconds": 600
            }')
          
          AUTH_KEY=$(echo "$AUTH_KEY_JSON" | jq -r .key)

          # Mask the key so it never appears in logs
          echo "::add-mask::$AUTH_KEY"

          # Store it for later steps
          echo "auth_key=$AUTH_KEY" >> $GITHUB_OUTPUT


      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscaled (userspace networking mode)
        run: |
          sudo tailscaled --tun=userspace-networking --socks5-server=localhost:1055 &
          sleep 5

      - name: Connect to Tailscale
        run: |
          sudo tailscale up --authkey=${{ steps.get-key.outputs.auth_key }}

      - name: Debug tailscale status
        run: tailscale status

      - name: Run your tasks
        run: |
          # Example: connect to a private service inside your tailnet
          curl --socks5 localhost:1055 -v http://${{ secrets.SERVICE }}/